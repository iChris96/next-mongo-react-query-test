import Head from 'next/head'
import { useEffect, useRef, useState } from 'react'
import styles from '../styles/Home.module.css'
import { COLORS } from '../const'
import Button from '/components/button'
import Todo from '/components/todo'
import useFetch from '/hooks/useFetch'



export default function Home() {
  const { data: todosData, error: todosError, isLoading: todosLoading, reload: reloadTodos } = useFetch('api/todos')
  const titleRef = useRef()

  const handleSubmit = async (event) => {
    event.preventDefault();

    const { current: { value: title } } = titleRef

    if (!title) return;

    const response = await fetch('/api/todos', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ title, isCompleted: false })
    })

    const data = await response.json()

    console.log({ data })

    titleRef.current.value = ''
    reloadTodos();
  }

  const renderTodos = () => {

    if (todosLoading) return <p>Loading Todos...</p>

    if (todosError) return <p>Todos Error</p>

    const { todos } = todosData;

    if (!todos) return <p>Empty todos</p>

    return <>
      <h3 style={{ textAlign: 'center' }}>Todos List</h3>
      <ul className={styles.ul}>
        {todos.map(todo => <Todo key={todo._id} todo={todo} />)}
      </ul>
    </>
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />

      </Head>

      <main className={styles.main}>
        <section className={styles.sectionTop}>
          <Button onClick={reloadTodos}>RELOAD DATA</Button>
        </section>
        <section className={styles.sectionNewTodo}>
          <h3>Create new todo</h3>
          <form onSubmit={handleSubmit}>
            <label>
              Title:
              <input type="text" ref={titleRef} />
            </label>
            <input type="submit" value="Submit" />
          </form>
        </section>

        <section style={{ width: '70%' }}>
          {renderTodos()}
        </section>

        <section>

        </section>
      </main>

      <footer className={styles.footer}>

      </footer>
    </div>
  )
}
